{"version":3,"sources":["store.js","submitHandler.js","validate.js","normalize_func/normalizeTime.js","normalize_func/normalizeNumber.js","normalize_func/normalizeFloatNumber.js","HexOceanForm.js","theme.js","index.js"],"names":["reducer","combineReducers","form","reduxFormReducer","store","createStore","values","a","fetch","method","headers","body","JSON","stringify","then","response","json","data","window","alert","catch","error","validate","errors","forEach","field","preparation_time","length","normalizeTime","value","onlyNum","replace","hh","slice","mm","ss","normalizeNumber","normalizeFloatNumber","useStyles","makeStyles","theme","root","marginTop","padding","spacing","borderRadius","background","margin","buttonClear","float","renderTextField","input","meta","touched","custom","TextField","variant","helperText","fullWidth","renderSlider","Slider","FormHelperText","renderSelect","children","select","onChange","HexOceanForm","props","handleSubmit","pristine","reset","submitting","dishType","classes","Container","component","maxWidth","className","onSubmit","Field","name","label","placeholder","normalize","MenuItem","type","Typography","gutterBottom","valueLabelDisplay","step","marks","min","max","Button","color","disabled","onClick","reduxForm","selector","formValueSelector","connect","state","createTheme","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","submitHandler","document","getElementById"],"mappings":"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","file":"static/js/main.30aa3f5c.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\n\r\nconst reducer = combineReducers({\r\n  form: reduxFormReducer,\r\n})\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","export default (async function submitHandler(values) {\r\n  fetch('https://frosty-wood-6558.getsandbox.com:443/dishes', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(values),\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    window.alert('Success:', data);\r\n  })\r\n  .catch((error) => {\r\n    window.alert('Error:', error);\r\n  });\r\n});","function validate(values) {\r\n    const errors = {};\r\n    const requiredFields = [\r\n      'name',\r\n      'preparation_time',\r\n      'type',\r\n      \"no_of_slices\",\r\n      \"diameter\",\r\n      \"spiciness_scale\",\r\n      \"slices_of_bread\",\r\n    ];\r\n    requiredFields.forEach(field => {\r\n      if (!values[field]) {\r\n        errors[field] = 'Required';\r\n      }\r\n    });\r\n    if ( \r\n      values.preparation_time &&\r\n      values.preparation_time.length < 8 \r\n    ) {\r\n      errors.preparation_time = 'Enter time in format \"hh:mm:ss\"';\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default validate","const normalizeTime = (value) => {\r\n  if (!value) return value;\r\n\r\n  const onlyNum = value.replace(/[^\\d]/g, '');\r\n\r\n  let hh = onlyNum.slice(0, 2);\r\n  let mm = onlyNum.slice(2, 4);\r\n  let ss = onlyNum.slice(4, 6);\r\n\r\n  switch (onlyNum.length) {\r\n    case 1 :\r\n      return `${hh}`\r\n    case 2 :\r\n      return `${hh}:`\r\n    case 3 :\r\n      return `${hh}:${mm}`\r\n    case 4 :\r\n      if(mm > 59) {\r\n        mm = 59\r\n      }\r\n      return `${hh}:${mm}:`\r\n    default:\r\n      if(mm > 59) {\r\n        mm = 59\r\n      }\r\n      if(ss > 59) {\r\n        ss = 59\r\n      }\r\n      return `${hh}:${mm}:${ss}`\r\n  }\r\n}\r\n  \r\nexport default normalizeTime","const normalizeNumber = (value) => {\r\n  if (!value) return value;\r\n  const onlyNums = value.replace(/[^\\d]/g, '')\r\n  return onlyNums\r\n}\r\n    \r\nexport default normalizeNumber","const normalizeFloatNumber = (value) => {\r\n  if (!value) return value\r\n  return value < 0 ? 0 : value\r\n}\r\n      \r\nexport default normalizeFloatNumber","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\r\nimport { \r\n    Container,\r\n    TextField,\r\n    MenuItem,\r\n    FormHelperText,\r\n    Slider,\r\n    Typography,\r\n    Button\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport validate from './validate';\r\nimport normalizeTime from './normalize_func/normalizeTime'\r\nimport normalizeNumber from './normalize_func/normalizeNumber'\r\nimport normalizeFloatNumber from './normalize_func/normalizeFloatNumber'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: '100px',\r\n    padding: theme.spacing(3),\r\n    borderRadius: theme.spacing(0.5),\r\n    background: 'white',\r\n    '& > *': {\r\n      margin: theme.spacing(1.5),\r\n    },\r\n  },\r\n  buttonClear: {\r\n    float: 'right'\r\n  }\r\n}));\r\n\r\nconst renderTextField = (\r\n    { input, meta: { touched, error }, ...custom },\r\n) => (\r\n  <TextField\r\n    variant=\"standard\"\r\n    helperText={touched && error}\r\n    error={touched && error}\r\n    fullWidth\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\n\r\nconst renderSlider = (\r\n  { input, meta: { touched, error }, ...custom },\r\n) => (\r\n  <>\r\n    <Slider\r\n      {...input}\r\n      {...custom}\r\n    />\r\n    <FormHelperText \r\n      error={touched && error}\r\n    >\r\n      {touched && error}\r\n    </FormHelperText>\r\n  </>\r\n);\r\n\r\nconst renderSelect = (\r\n  { input, meta: { touched, error }, children, ...custom }\r\n) => (\r\n  <TextField\r\n    variant=\"standard\"\r\n    helperText={touched && error}\r\n    error={touched && error}\r\n    fullWidth\r\n    select\r\n    onChange={(value) => input.onChange(value)}\r\n    {...input}\r\n    {...custom}\r\n    children={children}\r\n  />\r\n)\r\n\r\nlet HexOceanForm = props => {\r\n  const { handleSubmit, pristine, reset, submitting, dishType } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <form className={classes.root} onSubmit={handleSubmit}>\r\n        <div>\r\n          <Field\r\n            name=\"name\"\r\n            component={renderTextField}\r\n            label=\"Dish name\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"preparation_time\"\r\n            component={renderTextField}\r\n            label=\"Preparation time\"\r\n            placeholder=\"hh:mm:ss\"\r\n            normalize={normalizeTime}\r\n          />\r\n        </div>\r\n        <div>\r\n        <Field\r\n            name=\"type\"\r\n            label=\"Dish type\"\r\n            component={renderSelect}\r\n          >\r\n            <MenuItem value=\"pizza\">pizza</MenuItem>\r\n            <MenuItem value=\"soup\">soup</MenuItem>\r\n            <MenuItem value=\"sandwich\">sandwich</MenuItem>\r\n        </Field>\r\n        </div>\r\n        {(() => {\r\n          switch (dishType) {\r\n            case 'pizza':\r\n              return (\r\n                <>\r\n                <div>\r\n                  <Field\r\n                    name=\"no_of_slices\"\r\n                    component={renderTextField}\r\n                    label=\"Number of slices\"\r\n                    type=\"number\"\r\n                    normalize={normalizeNumber}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Field\r\n                    name=\"diameter\"\r\n                    component={renderTextField}\r\n                    label=\"Diameter\"\r\n                    type=\"number\"\r\n                    normalize={normalizeFloatNumber}\r\n                  />\r\n                </div>\r\n                </>\r\n              );\r\n            case 'soup':\r\n              return (\r\n                <div>\r\n                  <Typography gutterBottom>\r\n                    Spiciness scale\r\n                  </Typography>\r\n                  <Field\r\n                    name=\"spiciness_scale\"\r\n                    component={renderSlider}\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={1}\r\n                    marks\r\n                    min={0}\r\n                    max={10}\r\n                  />\r\n                </div>\r\n              );\r\n            case 'sandwich':\r\n              return (\r\n                <div>\r\n                  <Field\r\n                    name=\"slices_of_bread\"\r\n                    component={renderTextField}\r\n                    label=\"Slices of bread\"\r\n                    type=\"number\"\r\n                    normalize={normalizeNumber}\r\n                  />\r\n                </div>\r\n              );\r\n            default:\r\n              return null;\r\n          }\r\n        })()}\r\n        <div>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            disabled={pristine || submitting}\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            disabled={pristine || submitting}\r\n            onClick={reset}\r\n            className={classes.buttonClear}\r\n          >\r\n            Clear Values\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nHexOceanForm = reduxForm({\r\n  form: 'HexOceanForm',\r\n  validate,\r\n})(HexOceanForm);\r\n\r\n\r\nconst selector = formValueSelector('HexOceanForm');\r\nHexOceanForm = connect(state => {\r\n  const dishType = selector(state, 'type');\r\n  return {\r\n    dishType,\r\n  };\r\n})(HexOceanForm);\r\n\r\nexport default HexOceanForm","import { createTheme } from '@material-ui/core/styles'\r\n\r\nconst spacing = 8;\r\n\r\nconst theme = createTheme({\r\n  spacing\r\n});\r\n\r\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport store from './store';\nimport submitHandler from './submitHandler';\nimport HexOceanForm from './HexOceanForm.js';\nimport theme from \"./theme\";\nimport './style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n          <HexOceanForm onSubmit={submitHandler} />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}